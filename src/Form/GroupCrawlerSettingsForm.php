<?php

namespace Drupal\btj_scrapper\Form;

use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\group\Entity\Group;

class GroupCrawlerSettingsForm extends ConfigFormBase {

  const FORM_ID = 'btj_scrapper.group_crawler.settings_form';

  const CONFIG_ID = 'btj_scrapper.group_crawler.settings';

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return self::FORM_ID;
  }

  /**
   * {@inheritdoc}
   */
  protected function getEditableConfigNames() {
    return [
      self::CONFIG_ID,
    ];
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state, Group $group = NULL) {
    $entities = [
      'events' => $this->t('Events'),
      'news' => $this->t('News'),
      'libraries' => $this->t('Libraries'),
    ];

    $config = $this
      ->config(self::CONFIG_ID)
      ->get($this->buildSettingsKey($group));

    $form['crawler'] = [
      '#tree' => TRUE,
    ];

    $form_state->setTemporaryValue('group_entity', $group);

    foreach ($entities as $entity => $label) {
      $form['crawler'][$entity] = [
        '#type' => 'details',
        '#title' => $label,
      ];

      $form['crawler'][$entity]['uri'] = [
        '#type' => 'textfield',
        '#title' => $this->t('@label list path', ['@label' => $label]),
        '#description' => $this->t('URI path component to append to main url. This is where the list of the entities are located.'),
        '#default_value' => $config[$entity]['uri'] ?? '',
      ];

      $form['crawler'][$entity]['link'] = [
        '#type' => 'textfield',
        '#title' => $this->t('@label link', ['@label' => $label]),
        '#description' => $this->t('CSS selector for the main link'),
        '#default_value' => $config[$entity]['link'] ?? '',
      ];

      $form['crawler'][$entity]['pager_prev'] = [
        '#type' => 'textfield',
        '#title' => $this->t('@label pager previous link', ['@label' => $label]),
        '#description' => $this->t('CSS selector for pager previous link'),
        '#default_value' => $config[$entity]['pager_prev'] ?? '',
      ];

      $form['crawler'][$entity]['pager_next'] = [
        '#type' => 'textfield',
        '#title' => $this->t('@label pager next link', ['@label' => $label]),
        '#description' => $this->t('CSS selector for pager next link'),
        '#default_value' => $config[$entity]['pager_next'] ?? '',
      ];
    }

    return parent::buildForm(
      $form,
      $form_state
    );
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $values = $form_state->getValues();

    $key = $this->buildSettingsKey($form_state->getTemporaryValue('group_entity'));
    $this->config(self::CONFIG_ID)
      ->set($key, $values['crawler'])
      ->save();

    parent::submitForm(
      $form,
      $form_state
    );
  }

  private function buildSettingsKey(Group $group) {
    return 'group_' . $group->id() . '_crawlser_settings';
  }

  /**
   * {@inheritdoc}
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    parent::validateForm(
      $form,
      $form_state
    ); // TODO: Change the autogenerated stub
  }

  /**
   * Route custom title callback.
   *
   * @param \Drupal\group\Entity\Group $group
   *   Group entity.
   *
   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
   *   Route link title.
   */
  public function title(Group $group) {
    return $this->t('Edit crawler settings for <em>@label</em>', [
      '@label' => $group->label(),
    ]);
  }
}

